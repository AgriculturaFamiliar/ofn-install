--- # verify

# Check that the server is online and functional

# WARNING: This script is semi-destructive. It saves and loads the staging baseline,
# which will stop and start the server, resulting in downtime. The database contents
# will probably remain the same, but that is not guaranteed.
# NOT INTENDED TO BE RUN ON A PRODUCTION SERVER.


- name: "Test: Fetch website content"
  action: uri url=http://127.0.0.1 return_content=yes
  register: webpage

- fail: msg='Web server not running'
  when: "'Shop Now' not in webpage.content"


- name: get current date for timestamp
  shell: date +"%Y%m%d%H%M%S"
  register: current_date

- name: Move staging baseline out of the way
  command: mv {{ current_path }}/db/backup/staging-baseline.sql.gz {{ current_path }}/db/backup/staging-baseline-{{ current_date.stdout }}.sql.gz
  args:
    removes: "{{ current_path }}/db/backup/staging-baseline.sql.gz"

- name: "Test: Save staging baseline"
  shell: "{{ current_path }}/script/ci/save_staging_baseline.sh `git rev-parse HEAD`"
  args:
    chdir: "{{ current_path }}"
    creates: "{{ current_path }}/db/backup/staging-baseline.sql.gz"


- name: "Test: Load staging baseline"
  command: "{{ current_path }}/script/ci/load_staging_baseline.sh"

- name: "Test: Web server still runs after loading staging baseline"
  action: uri url=http://127.0.0.1 return_content=yes
  register: webpage

- fail: msg='web server not running'
  when: "'Shop Now' not in webpage.content"

- name: Restore original staging baseline
  command: mv {{ current_path }}/db/backup/staging-baseline-{{ current_date.stdout }}.sql.gz {{ current_path }}/db/backup/staging-baseline.sql.gz
  args:
    removes: "{{ current_path }}/db/backup/staging-baseline-{{ current_date.stdout }}.sql.gz"
