#!/bin/sh

set -e

BUNDLE=/home/{{ unicorn_user }}/.rbenv/shims/bundle

cd {{ current_path }} || exit 1

unset GIT_DIR
NEWREF=$(cat /dev/stdin | cut -d ' ' -f 2)

# Check out the new revision
git reset --hard $NEWREF

# Symlink shared files
rm -f {{ current_path }}/config/database.yml
ln -s {{ config_path }}/database.yml  {{ current_path }}/config/database.yml
ln -s -f {{ config_path }}/s3.yml  {{ current_path }}/config/s3.yml
ln -s -f {{ config_path }}/newrelic.yml  {{ current_path }}/config/newrelic.yml

# Install the required gems
# Note: the 'LANG=en_US.UTF-8' is a fix for jquery-rails 1.0.17...fails even though server has correct locale setting
LANG=en_US.UTF-8 $BUNDLE install --gemfile  {{ current_path }}/Gemfile --path {{ gem_path }} --deployment --without development test

# Update the DB schema
$BUNDLE exec rake RAILS_ENV={{ rails_env }} db:migrate

# Note: Calling standard assets:precompile is overkill and chews up heaps of memory.
#       Hence do steps one-by-one
#echo Doing total bundle install thing
#$BUNDLE exec rake RAILS_ENV={{ rails_env }} assets:precompile RAILS_GROUPS=assets
echo Doing asset:precompile:primary...
$BUNDLE exec rake RAILS_ENV={{ rails_env }} assets:precompile:primary RAILS_GROUPS=assets
echo Doing asset:precompile:nondigest...
$BUNDLE exec rake RAILS_ENV={{ rails_env }} assets:precompile:nondigest RAILS_GROUPS=assets

# Install cron jobs
$BUNDLE exec whenever --set 'environment={{ rails_env }}' --update-crontab

# Kill any DJ workers. Monit will restart them automatically
RAILS_ENV={{ rails_env }} ./script/delayed_job -i 0 stop

# Restart the unicorns
echo Restarting unicorn...
service unicorn_{{ app }} restart

# Tell bugsnag about the deploy, keeps the error history clean
echo Notifying bugsnag...
$BUNDLE exec rake RAILS_ENV={{ rails_env }} bugsnag:deploy TO={{ rails_env }}
echo Done.
