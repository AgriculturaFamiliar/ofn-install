--- # webserver
- name: make tmp/pids dir
  file: path={{ shared_path }}/pids state=directory

- name: make tmp dir
  file: path={{ current_path }}/tmp state=directory

- name: make tmp/pids dir
  file: src={{ shared_path }}/pids dest={{ current_path }}/tmp/pids state=link


- name: copy unicorn_init
  template: src=unicorn_init dest=/etc/init.d/unicorn_{{ app }} mode=744 owner=ubuntu
  sudo: yes

- name: copy unicorn.rb
  template: src=unicorn.rb dest={{ shared_path }}/config/unicorn.rb
    
- name: update unicorn 
  shell: update-rc.d -f unicorn_{{ app }} defaults
  sudo: yes


- name: setup unicorn app with nginx
  template: src=roles/webserver/templates/nginx_unicorn dest={{ nginx_path }}/sites-available/{{ app }} owner=root group=root mode=0600
  sudo: yes
  tags: unicorn-nginx

- name: enable unicorn app with nginx
  file: src={{ nginx_path }}/sites-available/{{ app }} dest={{ nginx_path }}/sites-enabled/{{ app }} state=link
  sudo: yes
  tags: unicorn-nginx

- name: remove default nginx site
  file: dest={{ nginx_path }}/sites-enabled/default state=absent
  sudo: yes
  tags: unicorn-nginx


# This will only work when bundler is run during the playbook.
#- name: run unicorn
  #service: name=unicorn_{{ app }} state=started
  #sudo: yes
  ## TODO: #     after "deploy:#{command}", "unicorn:#{command}"


#- name: download phantomjs
  #get_url: url=https://phantomjs.googlecode.com/files/{{ phantomjs }}.tar.bz2
           #dest=/var/tmp/{{ phantomjs }}.tar.bz2
  #sudo: yes

#- name: untar phantomjs
  #shell: chdir=/var/tmp tar xjf {{ phantomjs }}.tar.bz2 creates=/var/tmp/{{ phantomjs }}
  #sudo: yes

#- name: symlink the phantomjs executable
  #file: dest=/usr/bin/phantomjs src=/var/tmp/{{ phantomjs }}/bin/phantomjs state=link
  #sudo: yes

