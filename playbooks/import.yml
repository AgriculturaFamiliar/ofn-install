---
- name: import
  hosts: ofn_servers
  remote_user: "{{ user }}"

  become: yes
  become_user: "{{ unicorn_user }}"

  vars_prompt:
    - name: "db_import_file"
      prompt: "what is the database file to import?"
      private: no
      when: db_import_file is not defined

  tasks:
    - name: put database content onto server
      copy:
        src="{{ db_import_file }}"
        dest="{{ unicorn_home_path }}/db_import.sql"
      tags: copy

    # - name: stop unicorn
    #   service:
    #     name: unicorn_{{ app }}
    #     state: stopped
    #   become: yes
    #   become_user: "{{ user }}"

    # - name: stop nginx
    #   service:
    #     name: nginx
    #     state: stopped
    #   become: yes
    #   become_user: "{{ user }}"

    - name: stop unicorn
      shell: sudo /etc/init.d/unicorn_openfoodnetwork stop
      become: yes
      become_user: "{{ user }}"

    - name: stop nginx
      shell: sudo /etc/init.d/nginx stop
      become: yes
      become_user: "{{ user }}"

    - name: drop current database
      postgresql_db:
        name={{ db }}
        login_user={{ db_user }}
        login_password={{ db_password }}
        login_host=localhost
        state=absent
      become_user: "{{ unicorn_user }}"
      tags: database

    - name: create new database
      postgresql_db:
        name={{ db }}
        login_user={{ db_user }}
        login_password={{ db_password }}
        login_host=localhost
        owner={{ db_user }}
        state=present
      become_user: "{{ unicorn_user }}"
      tags: database

    - name: import database
      shell: "psql -U {{ db_user }} -h localhost {{ db }} < {{ unicorn_home_path }}/db_import.sql"
      become_user: "{{ unicorn_user }}"

    - name: start unicorn
      shell: sudo /etc/init.d/unicorn_openfoodnetwork start
      become: yes
      become_user: "{{ user }}"
      tags: start

    - name: start nginx
      shell: sudo /etc/init.d/nginx start
      become: yes
      become_user: "{{ user }}"
      tags: start
