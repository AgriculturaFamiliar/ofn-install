# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.


  config.vm.provider :virtualbox do |vbox|
    config.vm.box = "precise64"
    # Set box memory.  
    vbox.customize ["modifyvm", :id, "--memory", "1792"]
    # Optimise virtualbox.
    vbox.customize [ "modifyvm", :id, "--nictype1", "virtio" ]
    vbox.customize [ "modifyvm", :id, "--nictype2", "virtio" ]
    # VM network config.
    config.vm.network :forwarded_port, guest: 3000, host: 3002

    config.vm.synced_folder ".", "/vagrant", :create => true
  end


  config.vm.provider :aws do |aws, override|
    aws.access_key_id = 'YOUR_ACCESS_KEY_ID'
    aws.secret_access_key = 'YOUR_SECRET_ACCESS_KEY'
    aws.keypair_name = 'YOUR_KEYPAIR'
    aws.ami = "ami-9de416ea" #Ubuntu 12.04 LTS
    aws.region = "eu-west-1"
    aws.instance_type = "t1.micro"
    aws.security_groups = ["default"]
    override.ssh.username = "ubuntu"
    override.ssh.private_key_path = "path/to/your/aws_key.pem"
    aws.tags = {
      'Name' => 'openfoodnetwork'
    }
  end

  config.vm.provider :digital_ocean do |provider, override|
    override.vm.box = 'digital_ocean'
    provider.client_id = 'YOUR_CLIENT_ID'
    provider.api_key = 'YOUR_API_KEY'
    provider.image = 'Ubuntu 12.04.3 x64'
    provider.region = 'Amsterdam 1'
    provider.size = '512MB'
    provider.ssh_key_name = 'YOUR_SSH_KEY_NAME'
    override.ssh.private_key_path = '/path/to/your/do_key'
    override.vm.box_url = "https://github.com/smdahlen/vagrant-digitalocean/raw/master/box/digital_ocean.box"
    provider.ca_path = "/usr/local/opt/curl-ca-bundle/share/ca-bundle.crt"
  end

  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "ansible/playbook.yml"
    ansible.sudo = true
  end
end
