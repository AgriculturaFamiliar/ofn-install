#----------------------------------------------------------------------
# Variables to get your open foo network instance running
# 
# Copy this file to vars.yml before filling out!
#----------------------------------------------------------------------


###########################################################################################
# IMPORTANT VARIABLES - This is your chance! express your true individuality and set these. 

# Your domain name - without http://www etc.
domain: openfoodnetwork.xxx 

# Production and staging environments require SSL certificates and protocol set to https.
rails_env: development # production, staging, development or testing. 
# For https you will need to add server.crt and server.key files to the 'files' directory.
protocol: http # http or https 

# Set the git repository
git_repo: https://github.com/openfoodfoundation/openfoodnetwork.git
version: HEAD # Tag, branch, commit reference or HEAD

# You will want to set a new db password in production and staging environments.
db_pass: f00d

# Set admin email and password for logging in to the app.
admin_email: admin@example.com
admin_pass: f00dies

# For digital ocean builds or anywhere you have to set up the default user (by running "ansible user.yml -f 10"), 
# you will need to suply location of an SSH public key for the connection, on your local machine.
ssh_pubkey: "{{ lookup('file', '~/.ssh/ofn_rsa.pub') }}"

# Place to store database backups on your local machine (where ansible runs)  when running the backup task.
local_backup_path: /home/your_username/backups/{{ app }}

# Place to store rsynced files locally when running the backup task.
local_rsync_path: /home/your_username/backups/{{ app }}

# Set the language type for your locale
language: en_au.utf-8
# Set the language pack to download
language_packages: 
  - language-pack-en-base

# Set newrelic key for application monitoring. Set to "none" to not use newrelic.
newrelic_key: none

# Set bugnsag key for bug monitoring. Set to "none" to not use bugsnag.
bugsnag_key: none

# Set amazon s3 image hosting keys. Set to "none" to not use s3.
s3_bucket: none
s3_access_key_id: none
s3_secret_access_key: none


###########################################################################################
# OTHER VARIABLES - You can probably go with the herd and leave these as is. we won't tell.

#----------------------------------------------------------------------
# User variables - we default to 'ubuntu' here as its a common default on systems where the user is allready set up.
user: ubuntu
user_pass: ubuntu

#----------------------------------------------------------------------
# Rails variables
ruby: 1.9.3-p392
gem_path: /home/ubuntu/.gem
bundle_path: /home/ubuntu/.rbenv/shims/bundle
env:
  RAILS_ENV: "{{ rails_env }}"
  PATH: "{{ gem_home }}/bin:{{ ansible_env.PATH }}"
#phantomjs: phantomjs-1.9.0-linux-x86_64

#----------------------------------------------------------------------
# Database variables
db: openfoodnetwork
test_db: ofn_test
db_user: ofn_user
db_host: localhost

#----------------------------------------------------------------------
# App variables
app: openfoodnetwork
# Paths
home_path: "/home/{{ user }}"
app_path: "{{ home_path }}/apps/{{ app }}"
current_path: "{{ app_path }}/current"
build_path: "{{ app_path }}/build"
shared_path: "{{ app_path }}/shared"
backup_path: "{{ app_path }}/backups"
assets_path: "{{ shared_path }}/assets"
system_path: "{{ shared_path }}/system"
spree_path: "{{ shared_path }}/spree"
config_path: "{{ shared_path }}/config"
log_path: "{{ shared_path }}/log"
pid_path: "{{ shared_path }}/pids"
sock_path: "{{ shared_path }}/sock"
git_post_receive: "{{ current_path }}/.git/hooks/post-receive"

#----------------------------------------------------------------------
# Nginx variables
app_root: "{{ current_path }}"
port: 3000
# domain: is set above

#----------------------------------------------------------------------
# Unicorn variables
unicorn_user: "{{ user }}"
unicorn_config: "{{ config_path }}/unicorn.rb"
unicorn_log: "{{ log_path }}/unicorn.log"
unicorn_pid: "{{ pid_path }}/unicorn.pid"
unicorn_sock: "{{ sock_path }}/unicorn.{{ app }}.sock"
unicorn_workers: 2
unicorn_timeout: 30

